services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    working_dir: /app/backend
    command: >
      bash -c "python manage.py migrate && 
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./backend:/app/backend
      - /app/backend/.venv
      - ./frontend/templates:/app/frontend/templates
    ports:
      - "8000:8000"
    env_file:
      - ./backend/.env
    environment:
      - DEBUG=True
      - USE_POSTGRES=True
      - REDIS_HOST=redis
    depends_on:
      - db
      - redis

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    restart: on-failure

  db:
    image: postgres:15
    env_file:
      - ./backend/.env
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: on-failure

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/dev.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A config worker -l info
    volumes:
      - ./backend:/app/backend
    depends_on:
      - db
      - redis
    env_file:
      - ./backend/.env
    environment:
      - DEBUG=True
      - USE_POSTGRES=True
      - REDIS_HOST=redis

  beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A config beat -l info -s /tmp/celerybeat-schedule
    volumes:
      - ./backend:/app/backend
    depends_on:
      - db
      - redis
    env_file:
      - ./backend/.env
    environment:
      - DEBUG=True
      - USE_POSTGRES=True
      - REDIS_HOST=redis

volumes:
  pgdata: